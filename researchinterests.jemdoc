# jemdoc: menu{MENU}{researchinterests.html}
=Research Interests


=== Distributed control algorithms for robotic systems
~~~
{}{img_left}{photos/pics1.jpg}{alt text}{320}{180}
The challenge of distributed control is about designing 
local control laws such that a desired collective behavior 
emerges from the local interactions between neighboring agents. The
complexity of distributed control design is compensated by its
undisputed benefits in terms of communication, sensing and
computing power requirements, of flexibility and of robustness. 
Relevant problems that can be addressed using distributed
control in robotic applications are the following:
- Static coverage
- Dynamic coverage\/exploration\/patrolling
- Navigation (flocking, formation)
- Rendezvous
- Connectivity maintenance
- Topology control
 
~~~

[https://manuelboldrer.github.io/publications.html Related Publications: \[J2\]\[J4\]\[J5\]\[C1\].]

=== Robot navigation in human-shared environments
~~~
{}{img_left}{photos/ma.png}{alt text}{320}{180}
The ability to navigate their way through partially known
environments in complete autonomy is a key functionality
for mobile robots. However, the ambitious requirements of
a new generation of robotic applications set a high bar for
the development of navigation algorithms. Specifically, we can
identify five classes of requirements:
- Robustness and safety in navigation
- Socially-aware motion planning
- Multi-agent coordination
- Management of highly dynamical environments
- Computation efficiency \n

~~~

[https://manuelboldrer.github.io/publications.html Related Publications: \[J1\],\[J3\]\[C2\],\[C3\],\[C4\],\[C5\].]


=== Resilient multi-robot control
~~~
{}{img_left}{photos/pic3.jpg}{alt text}{320}{180}
A resilient multi-robot system refers to a group of 
robots that are designed to continue functioning even
when one or more robots fail or are compromised. 
In other words, the system has to manage failures, 
disruptions, and other unexpected events.
Resilience is critical in multi-robot systems because 
robots may encounter various challenges, such as hardware
 or software failures, communication disruptions or malicious attacks. 
These challenges can cause the robots to stop
 working or malfunction, which can affect the 
entire system's performance, reliability and even safety.
~~~

[https://manuelboldrer.github.io/publications.html Related Publications: \[J6\],\[C6\],[C7\].]



